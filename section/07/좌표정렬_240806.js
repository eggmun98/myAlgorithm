/* 문제와 이해
2차원 배열의 x축과 y축을 정렬을 해야 한다.
정렬의 1순위는 x축이고,
정렬의 2순위는 y축이다.
 */

/* 계획
메소드로도 풀어보고, 정렬 알고리즘을 이용해서 풀어보려고 한다.
메소드는 sort를 이용하여 if문으로 조건식을 나눌 거다.
x축과 같은 경우나 아닌 경우로 말이다.
같은 경우는 y축도 비교 그게 아니라면 x축만 비교
정렬 알고리즘 같은 경우는 버블 정렬 알고리즘을 이용한다.
버블 정렬 알고리즘은 두 가지 조건식으로 나눌 거다.
만약 첫 번째 요소와 두 번째 요소 중 첫 번째 x축이 클 경우
서로 자리를 교체한다.
또 만약 첫 번째 요소와 두 번째 요소가 같은 경우
y축을 비교하여 첫번쨰 요소의 y축이 큰 경우에만 서로 자리를 교체한다.
*/

/* 풀이1
 */
function solution(arr) {
  return arr.sort((a, b) => {
    if (a[0] === b[0]) {
      return a[1] - b[1];
    } else {
      return a[0] - b[0];
    }
  });
}

/* 풀이2
 */
function solution(arr) {
  const len = arr.length - 1;

  for (let i = 0; i < len; i++) {
    for (let j = 0; j < len - i; j++) {
      if (arr[j][0] > arr[j + 1][0]) {
        [arr[j + 1], arr[j]] = [arr[j], arr[j + 1]];
      } else if (arr[j][0] === arr[j + 1][0]) {
        if (arr[j][1] > arr[j + 1][1]) {
          [arr[j + 1], arr[j]] = [arr[j], arr[j + 1]];
        }
      }
    }
  }
  return arr;
}

/* 회고
이번 문제는 정렬 알고리즘을 알고 있으면 금방 풀 수 있는 문제였다.
그래서 메소드로도 풀어보고, 정렬 알고리즘을 통해서 풀어봤다.
이렇게 알고리즘을 알고 있어야 문제를 금방 풀수 있다는 것을 알게 된 문제였던 거 같다.
 */
