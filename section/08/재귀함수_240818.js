/* 문제와 이해
재귀함수를 이용하여 1부터 n까지 출력해야 한다.
 */

/* 계획
dfs라는 재귀 함수를 만든다.
dfs 첫 번째 코드에서는 n이 0이면 바로 리턴 시킨다.
그게 아니라면 자기 함수인 dfs를 실행시킨다.
실행시킬 때 매개변수로 n - 1을 준다.
그리고 실행시키고 나서 바로 밑에 
console.log를 실행시킨다
*/

/* 풀이1
 */
function solution(n) {
  function dfs(n) {
    if (n === 0) return;
    else {
      dfs(n - 1);
      console.log(n);
    }
  }

  dfs(n);
}

/* 풀이2
 */
function solution2(n) {
  function dfs(n) {
    if (n - 1 === 0) return;
    else {
      dfs(n - 1);
      console.log(n - 1);
    }
  }

  dfs(n + 1);
}
/* 회고
이번 문제는 재귀함수 문제이다.
기본적인 문제라서 금방 풀었다.
두 번째 풀이는 처음에 푼 풀이인데,
어렵게 풀었다...
이렇게 어렵게 푼 이유는 처음 콘솔 로그에 n - 1을 주었기 때문에,
이거에 맞춰서 값을 수정하다 보니 계산식이 복잡해졌다.
아무리 생각을 해봐도 더 단순하게 풀 수 있다고 생각하여
처음부터 다시 풀었더니 더 간단하게 풀게 되었다.

 */
